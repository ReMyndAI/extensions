[{"askEnabled":false,"dateCreated":720031197.650305,"id":"0FFC00D4-4535-405F-9C6F-B10936E595EE","query":"1715963764","steps":[{"sql":{"_0":{"db":"extras","sql":"SELECT startTimestamp, text FROM TranscriptionSegment WHERE callID = {INPUT} ORDER BY startTimestamp;","super":{"id":"CA7A7D2C-6098-4EBC-B172-D014C93D2E76","type":"sql"}}}},{"python":{"_0":{"super":{"code":"import json\n\ntry:\n\tarr = json.loads(OUTPUTS[1])\n\tif len(arr) == 0:\n\t\tprint(\"(No transcription found. Return an empty array for 'topics'.)\")\n\telse:\n\t\tfor line in arr:\n\t\t\tprint(\"[\" + line['startTimestamp'] + \"] \" + line['text'])\nexcept:\n\tprint(\"(No transcription found. Return an empty array for 'topics'.)\")","super":{"id":"2F24DEC4-A96B-40AA-97A0-862069112194","type":"python"}}}}},{"prompt":{"_0":{"format":"json","instructions":"A transcription from a recorded video conference call will be provided, including timestamps for each line in the format 'yyyy-MM-dd hh:mm:ss.SSS'. Identify the high-level topics discussed during the call, and generate a summary for each topic. Pay special attention to action items mentioned in the call, and be sure to include them in the generated summaries.\n\nThe result should be a JSON object containing a single key - \"topics\" - which is an array, and each element in the array represents a topic. Each topic should include the start and end timestamps, a title, and a summary. Example result:\n\n{\n    \"topics\": [\n        {\n            \"start\": \"2024-01-01 15:00:00.425\",\n            \"end\": \"2024-01-01 15:04:32.936\",\n            \"title\": \"Introductions\",\n            \"summary\": \"The participants take turns introducing themselves to the group. Stacy mentions that she lives in L.A. but will soon be moving to Boston. John has a new baby and has just returned from paternity leave.\"\n        },\n        {\n            \"start\": \"2024-01-01 15:04:45.356\",\n            \"end\": \"2024-01-01 15:27:02.295\",\n            \"title\": \"Recap Past 2 Weeks\",\n            \"summary\": \"The work from the past 2 weeks is discussed. David 's tasks are completed, but John will require a few more days to tie up loose ends.\"\n        },\n        {\n            \"start\": \"2024-01-01 15:27:05.492\",\n            \"end\": \"2024-01-01 15:58:23.013\",\n            \"title\": \"Discuss Upcoming Projects\",\n            \"summary\": \"The group discusses the requirements for upcoming projects. Stacy is to follow up with ACME Inc about purchasing shipping supplies. John and Robert will work together to resolve an issue in the codebase related to scheduling events. David will begin work on a Settings panel for the application. David will also contact the internet provider about connection issues in the office.\"\n        },\n        {\n            \"start\": \"2024-01-01 15:58:31.102\",\n            \"end\": \"2024-01-01 15:59:56.090\",\n            \"title\": \"Closing\",\n            \"summary\": \"David suggests a follow-up call on Wednesday to check on progress. Robert will be out of town for a week starting on the 14th.\"\n        }\n    ]\n}","model":{"backendID":"remynd","model":"gpt-4o"},"super":{"id":"409B4639-65F5-41A1-960C-838E71FABDF5","type":"prompt"},"text":"Call transcription:\n\n{OUTPUT 2}"}}},{"python":{"_0":{"super":{"code":"import json\nobj = json.loads(OUTPUTS[3])\nprint(json.dumps(obj['topics']))","super":{"id":"5CB79564-AD80-4946-86CD-847C6D7262B3","type":"python"}}}}}],"title":"Call Summary Generator"}]